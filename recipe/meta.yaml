{% set name = "alibi-detect" %}
{% set version = "0.11.4" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 5e81eee628260a264e5ebf27d9ab400a34f8ab53d1c0e883547c4c6f9b1aa1be
  patches:
    - patches/0001-fix-binom_test-to-binomtest.patch
    - patches/0002-fix-opt_dep-attribute-check.patch

build:
  number: 0
  # tensorflow not available for py312
  # skip s390x because not available:
  #   tensorflow, tensorflow-probability, opencv, numba, libgdal
  skip: true  # [py<38 or py>311 or s390x]
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv

requirements:
  build:
    - patch     # [not win]
    - m2-patch  # [win]
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    # Core dependencies
    - python
    - dill >=0.3.0,<0.4.0
    - matplotlib-base >=3.0.0,<4.0.0
    # avoid 0.54 due to: https://github.com/SeldonIO/alibi/issues/466
    - numba >=0.50.0,!=0.54.0,<0.58.0
    - numpy >=1.16.2,<2.0.0
    - py-opencv >=3.2.0,<5.0.0
    - pandas >=1.0.0,<3.0.0
    - pillow >=5.4.1,<10.0.0
    - requests >=2.21.0,<3.0.0
    # https://github.com/SeldonIO/alibi/issues/215
    - scikit-image >=0.14.2,!=0.17.1,<0.22
    - scikit-learn >=0.20.2,<2.0.0
    - scipy >=1.3.0,<2.0.0
    - tqdm >=4.28.1,<5.0.0
    - transformers >=4.0.0,<5.0.0
    - typing-extensions >=3.7.4.3
    - pydantic >=1.8.0,<2.0.0
    # STC, see https://discuss.python.org/t/adopting-recommending-a-toml-parser/4068
    - toml >=0.10.1,<1.0.0
    - catalogue >=2.0.0,<3.0.0
    # Optional dependencies, but treat as core for conda
    - tensorflow >=2.2.0,!=2.6.0,!=2.6.1,<2.13.0
    - tensorflow-probability >=0.8.0,<0.20.0
    - pytorch >=1.7.0,<1.14.0
  run_constrained:
    - blas * openblas    # [osx and x86_64]
    - prophet >=1.1.0,<2.0.0
    - pykeops >=2.0.0,<2.2.0

{% set tests_to_ignore = "" %}
# skip test_saving because uses pytest-cases (not available)
# and anyway the datasets would not be available because
# alibi_testing is not available.
{% set tests_to_ignore = tests_to_ignore + " --ignore=${SP_DIR}/alibi_detect/saving/tests/test_saving.py" %}  # [not win]
{% set tests_to_ignore = tests_to_ignore + " --ignore=%SP_DIR%/alibi_detect/saving/tests/test_saving.py" %}   # [win]

test:
  imports:
    - alibi_detect
  requires:
    - pytest
  commands:
    # on osx failing with:
    #   alibi-detect 0.11.4 requires opencv-python, which is not installed.
    #   tensorflow 2.11.0 requires libclang, which is not installed.
    #   tensorflow 2.11.0 has requirement protobuf<3.20,>=3.9.2, but you have protobuf 3.20.3.
    - pip check  # [not osx]
    - pytest -v --pyargs alibi_detect {{ tests_to_ignore }}

about:
  home: https://github.com/SeldonIO/alibi-detect
  summary: Algorithms for outlier detection, concept drift and metrics.
  license: Apache-2.0
  license_file: LICENSE
  license_family: Apache
  description: |
    [Alibi Detect](https://github.com/SeldonIO/alibi-detect) is an open source 
    Python library focused on **outlier**, **adversarial** and **drift** detection. 
    The package aims to cover both online and offline detectors for tabular data, 
    text, images and time series. Both **TensorFlow** and **PyTorch** backends are 
    supported for drift detection.

    - [Documentation](https://docs.seldon.io/projects/alibi-detect/en/latest/)

    For more background on the importance of monitoring outliers and distributions 
    in a production setting, check out 
    [this talk](https://slideslive.com/38931758/monitoring-and-explainability-of-models-in-production?ref=speaker-37384-latest) 
    from the *Challenges in Deploying and Monitoring Machine Learning Systems* 
    ICML 2020 workshop, based on the paper [Monitoring and explainability of models 
    in production](https://arxiv.org/abs/2007.06299) and referencing Alibi Detect.

    For a thorough introduction to drift detection, check out [Protecting Your 
    Machine Learning Against Drift: An Introduction](https://youtu.be/tL5sEaQha5o). 
    he talk covers what drift is and why it pays to detect it, the different types 
    of drift, how it can be detected in a principled manner and also describes the 
    anatomy of a drift detector.


    PyPI: [https://pypi.org/project/alibi-detect/](https://pypi.org/project/alibi-detect/)

  doc_url: https://docs.seldon.io/projects/alibi-detect
  dev_url: https://github.com/SeldonIO/alibi-detect

extra:
  recipe-maintainers:
    - sugatoray
    # Maintainers from upstream repo
    - jklaise
    - ascillitoe
  skip-lints:
    - missing_pip_check
